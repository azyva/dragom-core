# Copyright 2015 - 2017 AZYVA INC.
#
# This file is part of Dragom.
#
# Dragom is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Dragom is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Dragom.  If not, see <http://www.gnu.org/licenses/>.

# Initiating merge process for destination top-level ModuleVersion of
# ReferencePath.
# Arguments:
# - Destination ReferencePath
INITIATING_MERGE_FOR_DEST_TOP_LEVEL_MODULE_VERSION=Initiating merge for destination top-level ModuleVersion of ReferencePath\n{0}.

# Source Version automatically reused for destination ModuleVersion.
# - Destination ModuleVersion
# - Reused source Version
SRC_VERSION_AUTOMATICALLY_REUSED=Source version {1} is automatically reused for destination ModuleVersion {0}.

# Input new source Version to merge into destination ModuleVersion. End with
# "*" to include user guidance.
# Arguments:
# - Destination ModuleVersion
INPUT_SRC_VERSION=Which source version do you want to merge into ModuleVersion {0}*

# Automatically reuse source Version? End with "*" to include
# "always, never, ask" response choices.
# Arguments:
# - Version
AUTOMATICALLY_REUSE_SRC_VERSION=Do you want to automatically reuse source version {0} for all subsequent modules for which a source version needs to be specified*

# Locating source ModuleVersion within source ReferenceGraph corresponding to
# destination ReferencePath.
# Arguments:
# - Base source ModuleVersion
# - Reference path within destination
LOCATING_SRC_MODULE_VERSION=Locating source ModuleVersion within reference graph rooted at ModuleVersion {0} corresponding to destination ReferencePath\n{1}.

# Source ModuleVersion not found corresponding to destination Reference.
# Arguments:
# - Source ReferencePath
# - Reference in destination
SRC_MODULE_VERSION_NOT_FOUND=A source ModuleVersion corresponding to destination reference {1} could not be found within source ReferencePath\n{0}.

# Merging leaf ModuleVersion of source ReferencePath into destination
# ReferencePath.
# Arguments:
# - Source ReferencePath
# - Destination ReferencePath
MERGING_LEAF_MODULE_VERSION=Merging leaf ModuleVersion of source ReferencePath\n{0}\ninto\n{1}.

# Merge already performed.
# Arguments:
# - Destination ModuleVersion
# - Source Version
MERGE_ALREADY_PERFORMED=Merge of version {1} into ModuleVersion {0} has already been performed. Merge operation skipped.

# Checkout out ModuleVersion.
# Arguments:
# - ModuleVersion
# - User workspace directory
CHECKING_OUT_MODULE_VERSION=Checking out ModuleVersion {0} into {1}.

# Shallow-merging source ModuleVersion into destination Version.
# Arguments:
# - Source ModuleVeresion
# - Destination Version
# - Destination user workspace directory
SHALLOW_MERGING_SRC_MODULE_VERSION_INTO_DEST=Shallow-merging source ModuleVersion {0} into destination version {1} in {2}.

# Shallow-merging source ModuleVersion into destination Version excluding
# version-changing commits.
# Arguments:
# - Source ModuleVeresion
# - Destination Version
# - Destination user workspace directory
# - List of excluded version-changing commit
SHALLOW_MERGING_SRC_MODULE_VERSION_INTO_DEST_EXCLUDING_VERSION_CHANGING_COMMITS=Shallow-merging source ModuleVersion {0} into destination version {1} in {2} excluding version-changing commits {3}.

# Source ModuleVersion was merged into destination Version.
# Arguments:
# - Source ModuleVersion
# - Destination Version
# - Destination user workspace directory
SRC_MERGED_INTO_DEST=Source ModuleVersion {0} was merged into destination version {1} in {2}.

# Source ModuleVersion was merged into destination Version, with conflicts.
# Arguments:
# - Contributed ToolExitStatus
# - Source ModuleVersion
# - Destination Version
# - Destination user workspace directory
SRC_MERGED_INTO_DEST_CONFLICTS={0}: Source ModuleVersion {1} was merged into destination version {2} in {3} but conflicts occurred.

# Both source and destination static Reference's diverge.
# Arguments:
# - Contributed ToolExitStatus
# - Source ReferencePath
# - Source static child Reference
# - Destination ReferencePath
# - Destination static child Reference
BOTH_SRC_AND_DEST_STATIC_REFERENCE_DIVERGE={0}: Both the source static reference {2} within ReferencePath\n{1}\nand destination static reference {4} within ReferencePath\n{3}\ndiverge. This is a conflict at the reference graph level.

# Source static Reference diverges from destination static Reference.
# Arguments:
# - Source ReferencePath
# - Source static child Reference
# - Destination ReferencePath
# - Destination static child Reference
SRC_STATIC_REFERENCE_DIVERGES_FROM_DEST_STATIC_REFERENCE=Source static reference {1} within ReferencePath\n{0}\ndiverges from destination static reference {3} within ReferencePath\n{2}.\nDestination version will be updated to source version.

# Destination Reference Version was changed.
# This message may seem redundant with REFERENCE_WILL_BE_CHANGED.
# This one occurs after the change and is also included in the list of
# significant actions performed, whereas the other one occurs before the change
# and is followed by a confirmation from the user.
# Arguments:
# - Destination ReferencePath
# - Destination child Reference changed
# - New Version
CHANGE_DEST_REFERENCE_VERSION=The version of destination reference {1} within ReferencePath\n{0}\nwas changed to the version equivalent to {2}.

# Source dynamic Reference diverges from destination static Reference.
# Arguments:
# - Source ReferencePath
# - Source dynamic child Reference
# - Destination ReferencePath
# - Destination static child Reference
SRC_DYNAMIC_REFERENCE_DIVERGES_FROM_DEST_STATIC_REFERENCE=Source dynamic reference {1} within ReferencePath\n{0}\ndiverges compared to destination static reference {3} within ReferencePath\n{2}.\nDestination will be switched to a dynamic version so that changes from the source can be merged.

# Destination static Reference also diverges from source dynamic Reference and
# selected dynamic Version should include the changes.
# Arguments: none.
DEST_STATIC_REFERENCE_ALSO_DIVERGES_FROM_SRC_DYNAMIC_REFERENCE=Destination static version also diverges compared to source. Selected dynamic version to switch to should include these changes.

# Destination static Reference was not switched to dynamic.
# Arguments:
# - Contributed ToolExitStatus
# - Destination ReferencePath
# - Destination static child Reference
DEST_STATIC_VERSION_NOT_SWITCHED={0}: Destination static reference {2} within ReferencePath\n{1}\nwas not switched to a dynamic version. Merge process for current matched destination ModuleVersion aborted.

# Destination static Reference was also diverging from source dynamic Reference
# and selected dynamic Version does not include the changes which may be
# lost
# Arguments:
# - Source ReferencePath
# - Source dynamic child Reference
# - Destination ReferencePath
# - Destination static child Reference
# - New selected dynamic Version
NEW_DEST_DYNAMIC_VERSION_DOES_NOT_INCLUDE_ORIGINALLY_DIVERGING_COMMITS=Destination static reference {3} within ReferencePath\n{2}\nwas diverging from source dynamic reference {1} within ReferencePath\n{0}.\nNew selected dynamic version {4} does not include the diverging commits which may be lost.

# Destination Reference will be changed to new Version.
# Arguments:
# - Destination ReferencePath
# - Destination child Reference changed
# - New Version
DEST_REFERENCE_WILL_BE_CHANGED=The version of destination reference {1} within ReferencePath\n{0}\nwill be changed to {2}.

# Recursively merging source dynamic reference into destination dynamic
# reference.
# - Source ReferencePath
# - Source dynamic child Reference
# - Destination ReferencePath
# - Destination static child Reference
RECURSIVELY_MERGING_SRC_DYNAMIC_REFERENCE_INTO_DEST_DYNAMIC_REFERENCE=Destination reference {3} within ReferencePath\n{2}\nis dynamic. Recursively merging source reference {1} within ReferencePath\n{0}.

# Verifying if source diverges from destination ModuleVersion.
# Arguments:
# - Source ModuleVeresion
# - Destination ModuleVersion
VERIFYING_SRC_DIVERGES_FROM_DEST_MODULE_VERSION=Verifying if source ModuleVersion {0} diverges from destination ModuleVersion {1}.

# No divergences found in source ModuleVersion compared to dest ModuleVersion.
# Arguments:
# - Source ModuleVersion
# - Destination ModuleVersion
NO_DIVERGENCES_FOUND_IN_SRC_COMPARED_TO_DEST_MODULE_VERSION=No divergences found in source ModuleVersion {0} compared to destination ModuleVersion {1}.

# Divergences found in source ModuleVersion compared to dest ModuleVersion.
# Arguments:
# - Source ModuleVersion
# - Destination ModuleVersion
SRC_DIVERGES_FROM_DEST_MODULE_VERSION=Divergences found in source ModuleVersion {0} compared to destination ModuleVersion {1}.

# Verifying if destination diverges from source ModuleVersion.
# Arguments:
# - Source ModuleVeresion
# - Destination ModuleVersion
VERIFYING_DEST_DIVERGES_FROM_SRC_MODULE_VERSION=Verifying if destination ModuleVersion {1} diverges from source ModuleVersion {0}.

# No divergences found in destination ModuleVersion compared to source ModuleVersion.
# Arguments:
# - Source ModuleVersion
# - Destination ModuleVersion
NO_DIVERGENCES_FOUND_IN_DEST_COMPARED_TO_SRC_MODULE_VERSION=No divergences found in destination ModuleVersion {1} compared to source ModuleVersion {0}.

# Divergences found in destination ModuleVersion compared to source ModuleVersion.
# Arguments:
# - Source ModuleVersion
# - Destination ModuleVersion
DEST_DIVERGES_FROM_SRC_MODULE_VERSION=Divergences found in destination ModuleVersion {1} compared to source ModuleVersion {0}.

# No divergences between source and destination ModuleVersion's. Now need to
# consider common references.
# Arguments:
# - Source ModuleVersion
# - Destination ModuleVersion
NO_DIVERGENCES_BETWEEN_SRC_AND_DEST_MODULE_VERSIONS=No divergence found either in source ModuleVersion {0} or destination ModuleVersion {1}. Now need to consider common references.

# Recursively verifying divergences between source and destination references.
# Arguments:
# - Source child Reference
# - Destination child Reference
RECURSIVELY_VERIFYING_DIVERGENCES_BETWEEN_SRC_AND_DEST_REFERENCES=Found common source reference {0} and destination reference {1}. Recursing to find divergences between them.
