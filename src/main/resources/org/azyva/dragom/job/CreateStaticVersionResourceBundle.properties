# Copyright 2015, 2016 AZYVA INC.
#
# This file is part of Dragom.
#
# Dragom is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Dragom is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Dragom.  If not, see <http://www.gnu.org/licenses/>.

# Reference changed and needs updating in parent.
# Arguments:
# - ReferencePath of parent
# - Reference to child
# - New static Version
PARENT_WILL_BE_UPDATED_BECAUSE_REFERENCE_CHANGED=The version of reference {1} within ReferencePath {0} was established at {2} during its visit. We must update the parent.

# ModuleVersion is already checked out in user workspace directory and changes
# will be performed in this directory.
# Arguments:
# - ModuleVersion
# - User workspace directory
MODULE_VERSION_CHECKED_OUT_IN_USER_WORKSPACE_DIRECTORY=ModuleVersion {0} is already checked out in {1}. Changes will be performed in this directory.

# References were updated within parent following the new established static
# Version. This message may seem redundant with
# PARENT_WILL_BE_UPDATED_BECAUSE_REFERENCE_CHANGED. This one is used for the
# commit message.
# Arguments:
# - ReferencePath of parent
# - Reference to child
# - New static Version
REFERENCE_UPDATED=Reference {1} within ReferencePath {0} was updated to static version {2}.

# Reference Version changed but no update required in parent.
# This can occur when references are expressed using ArtifactVersion's and the
# ArtifactVersion corresponding to the new Version is equivalent to the previous
# ArtifactVersion, such as with the "phase" new dynamic Version strategy.
# Arguments:
# - ReferencePath of parent
# - Reference to child
# - New Version
CHANGE_REFERENCE_VERSION_NO_ARTIFACT_VERSION_CHANGE=The version of reference {1} within ReferencePath {0} established at {2} is equivalent to the previous version within the parent (at the ArtifactVersion level). No change was performed.

# Reference to dynamic Version of external Module.
# Arguments:
# - ReferencePath of parent
# - Reference to child
REFERENCE_DYNAMIC_VERSION_EXTERNAL_MODULE=Reference {1} within ReferencePath {0} refers to a dynamic version of an external module. Please change to a static version before restarting job.

# An Existing static Version was selected.
# Arguments:
# - ModuleVersion
# - Existing static Version
EXISTING_STATIC_VERSION_SELECTED=An existing static version {1} for ModuleVersion {0} was selected. The process will continue as if that version had just been created. It probably was in a previous execution of this job.

# Creating new static Version for ModuleVersion.
# Arguments:
# - ModuleVersion
# - New static Version
# - Base dynamic Version
CREATING_NEW_STATIC_VERSION=Creating new static version {1} for ModuleVersion {0}.

# ArtifactVersion was changed.
# Arguments:
# - ModuleVersion
# - ArtifactVersion
# - New static Version
ARTIFACT_VERSION_CHANGED=ArtifactVersion {1} corresponding to new static version {2} was set for ModuleVersion {0}. 

# ArtifactVersion was set but no change required.
# Arguments:
# - ModuleVersion
# - ArtifactVersion
# - New static Version
NO_ARTIFACT_VERSION_CHANGE=ArtifactVersion {1} corresponding to new static version {2} is equivalent to previous ArtifactVersion for ModuleVersion {0}. No change was performed.

# Initiating build.
# Arguments:
# - ModuleVersion
# - Workspace directory
# - New static Version
INITIATING_BUILD=Initiating build for ModuleVersion {0} in workspace directory {1} to ensure building the module is successful before creating new static version {2}.

# Build failed.
# Arguments:
# - ModuleVersion
# - Workspace directory
# - New static Version
BUILD_FAILED=The build for ModuleVersion {0} in workspace directory {1} failed. Aborting the process for creating new static version {2}.
			
# ArtifactVersion was changed before creating new static Version. This message
# is similar to ARTIFACT_VERSION_CHANGE. This one is used as for the commit
# message.
# Arguments:
# - ModuleVersion
# - ArtifactVersion
# - New static Version
ARTIFACT_VERSION_CHANGED_BEFORE_CREATING_NEW_STATIC_VERSION=ArtifactVersion {1} was set for ModuleVersion {0} in preparation for creating the new static version {2}.

# Static Version created without switching to it.
# Arguments:
# - ModuleVersion
# - New static Version
STATIC_VERSION_CREATED=Static version {1} was created in the SCM for ModuleVersion {2} without switching to it.

# Do you want to revert ArtifactVersion? End with "*" to include
# "always, never, yes ask, no ask" response choices. 
# Arguments:
# - ModuleVersion
# - Reverted ArtifactVersion
# - New static Version
DO_YOU_WANT_TO_REVERT_ARTIFACT_VERSION=Do you want to revert the ArtifactVersion to {1} (corresponding to the original dynamic version) after creating the new static version {2} for ModuleVersion {0}, and for all subsequent new static version creations*

# ArtifactVersion reverted.
# Arguments:
# - ModuleVersion
# - Reverted ArtifactVersion
# - New static Version
ARTIFACT_VERSION_REVERTED=ArtifactVersion was reverted to {1} (corresponding to the original dynamic version) after creating the new static version {2} for ModuleVersion {0}.

# Reverted ArtifactVersion is the same as current ArtifactVersion.
# Arguments:
# - ModuleVersion
# - Reverted ArtifactVersion
# - New static Version
NO_REVERTED_ARTIFACT_VERSION_CHANGE=Reverted ArtifactVersion {1} (corresponding to the original dynamic version) is the same as the current ArtifactVersion corresponding to new static version {2} for ModuleVersion {0}. No change was performed.

# Reusing already established static Version.
# Arguments:
# - ModuleVersion
# - Already established static Version
REUSING_ALREADY_ESTABLISHED_STATIC_VERSION=Reusing already established static version {1} for ModuleVersion {0}. 
