# Copyright 2015 - 2017 AZYVA INC.
#
# This file is part of Dragom.
#
# Dragom is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Dragom is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Dragom.  If not, see <http://www.gnu.org/licenses/>.

# Specified semantic Version type used.
# Arguments:
# - ModuleVersion
# - Specified semantic Version type 
NEW_SEMANTIC_VERSION_TYPE_SPECIFIED=New semantic version type {1} specified for creating a new static version for ModuleVersion {0} is used as is.

# New semantic Version type automatically reused.
# Arguments:
# - ModuleVersion
# - Reused new semantic Version type
NEW_SEMANTIC_VERSION_TYPE_AUTOMATICALLY_REUSED=New semantic version type {1} is automatically reused for creating a new static version for ModuleVersion {0}.

# Input new semantic Version type.
# Arguments:
# - ModuleVersion
# - Greatest static Version
INPUT_NEW_SEMANTIC_VERSION_TYPE=Which new semantic version type do you want to use for creating a new static version for ModuleVersion {0} given that {1} is the greatest current static version of the module (mAjor, mInor)? 

# Input new semantic Version type with default.
# Arguments:
# - ModuleVersion
# - Greatest static Version
# - Default new semantic Version type
INPUT_NEW_SEMANTIC_VERSION_TYPE_WITH_DEFAULT=Which new semantic version type do you want to use for creating a new static version for ModuleVersion {0} given that {1} is the greatest current static version of the module (mAjor, mInor) [{2}]? 

# New semantic Version type invalid.
# Arguments:
# - Invalid new semantic Version type
NEW_SEMANTIC_VERSION_TYPE_INVALID=New semantic version type {0} is invalid. Try again.

# Automatically reuse new semantic Version type? End with "*" to include
# "always, never, ask" response choices.
# Arguments:
# - New semantic Version type to reuse
AUTOMATICALLY_REUSE_NEW_SEMANTIC_VERSION_TYPE=Do you want to automatically reuse the new semantic version type {0} for all subsequent modules for which a new static version needs to be created*
